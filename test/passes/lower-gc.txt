add mem
add run
comp layouts
lower code
(module
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $none_=>_none (func))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (global $nextMalloc (mut i32) (i32.const 0))
 (memory $0 256 256)
 (func $struct-gets (param $ref-i32 i32) (param $ref-i64 i32) (param $ref-f32 i32) (param $ref-f64 i32) (param $ref-ref i32) (param $ref-rtt i32)
  (drop
   (i32.load offset=4
    (local.get $ref-i32)
   )
  )
  (drop
   (i64.load offset=4
    (local.get $ref-i64)
   )
  )
  (drop
   (f32.load offset=4
    (local.get $ref-f32)
   )
  )
  (drop
   (f64.load offset=4
    (local.get $ref-f64)
   )
  )
  (drop
   (i32.load offset=4
    (local.get $ref-ref)
   )
  )
  (drop
   (i32.load offset=4
    (local.get $ref-rtt)
   )
  )
 )
 (func $struct-sets (param $ref-i32 i32) (param $ref-i64 i32) (param $ref-f32 i32) (param $ref-f64 i32) (param $ref-ref i32) (param $ref-rtt i32)
  (i32.store offset=4
   (local.get $ref-i32)
   (i32.const 0)
  )
  (i64.store offset=4
   (local.get $ref-i64)
   (i64.const 0)
  )
  (f32.store offset=4
   (local.get $ref-f32)
   (f32.const 0)
  )
  (f64.store offset=4
   (local.get $ref-f64)
   (f64.const 0)
  )
  (i32.store offset=4
   (local.get $ref-ref)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $ref-rtt)
   (i32.const 0)
  )
 )
 (func $many-fields (param $ref i32)
  (i32.store offset=4
   (local.get $ref)
   (i32.const 1)
  )
  (f64.store offset=8
   (local.get $ref)
   (f64.const 3.14159)
  )
  (f32.store offset=16
   (local.get $ref)
   (f32.const 2.718280076980591)
  )
 )
 (func $new
  (local $0 i32)
  (drop
   (block (result i32)
    (local.set $0
     (call $malloc
      (i32.const 8)
     )
    )
    (i32.store
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=4
     (local.get $0)
     (i32.const 42)
    )
    (local.get $0)
   )
  )
 )
 (func $new-default
  (local $0 i32)
  (drop
   (block (result i32)
    (local.set $0
     (call $malloc
      (i32.const 20)
     )
    )
    (i32.store
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=4
     (local.get $0)
     (i32.const 0)
    )
    (f64.store offset=8
     (local.get $0)
     (f64.const 0)
    )
    (f32.store offset=16
     (local.get $0)
     (f32.const 0)
    )
    (local.get $0)
   )
  )
 )
 (func $array-gets (param $ref-bytes i32) (param $ref-doubles i32)
  (drop
   (i32.load
    (i32.add
     (i32.add
      (local.get $ref-bytes)
      (i32.const 8)
     )
     (i32.mul
      (i32.const 4)
      (i32.const 7)
     )
    )
   )
  )
  (drop
   (f64.load
    (i32.add
     (i32.add
      (local.get $ref-doubles)
      (i32.const 8)
     )
     (i32.mul
      (i32.const 8)
      (i32.const 7)
     )
    )
   )
  )
 )
 (func $array-sets (param $ref-bytes i32) (param $ref-doubles i32)
  (i32.store
   (i32.add
    (i32.add
     (local.get $ref-bytes)
     (i32.const 8)
    )
    (i32.mul
     (i32.const 4)
     (i32.const 7)
    )
   )
   (i32.const 42)
  )
  (f64.store
   (i32.add
    (i32.add
     (local.get $ref-doubles)
     (i32.const 8)
    )
    (i32.mul
     (i32.const 8)
     (i32.const 7)
    )
   )
   (f64.const 3.14159)
  )
 )
 (func $malloc (param $0 i32) (result i32)
  (global.set $nextMalloc
   (i32.add
    (global.get $nextMalloc)
    (local.get $0)
   )
  )
  (i32.sub
   (global.get $nextMalloc)
   (local.get $0)
  )
 )
)
