;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: foreach %s %t wasm-opt --inlining -all --optimize-level=3 -S -o - | filecheck %s

;; Test the maySkipHeavyWork functionality in inlining: if a function has heavy
;; work, but we might actually avoid doing that work, then, it is still
;; potentially worth inlining.

(module
  (import "outside" "work" (func $outside-work))

  (memory 1 1)

  (func $if-call (param $x i32)
    ;; An avoidable call.
    (if
      (local.get $x)
      (call $outside-work)
    )
  )

  (func $if-fence (param $x i32)
    ;; An avoidable atomic fence, which is very costly.
    (if
      (local.get $x)
      (atomic.fence)
    )
  )

  (func $caller (param $x i32)
    ;; Call each function more than once, to avoid us deciding to inline just
    ;; because they have a single use.

    (call $if-call (local.get $x))
    (call $if-call (local.get $x))

    (call $if-fence (local.get $x))
    (call $if-fence (local.get $x))
  )
)
