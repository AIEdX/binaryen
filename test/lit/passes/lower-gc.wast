;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; RUN: wasm-opt %s --lower-gc -all -S -o - \
;; RUN:   | filecheck %s

(module
 (type $empty (struct))
 (type $struct-i32 (struct (mut i32)))
 (type $struct-i64 (struct (mut i64)))
 (type $struct-f32 (struct (field (mut f32))))
 (type $struct-f64 (struct (field (mut f64))))
 (type $struct-ref (struct (field (mut (ref null $empty)))))
 (type $struct-rtt (struct (field (mut (rtt $empty)))))

 (type $many-fields (struct (field (mut i32)) (field (mut f64)) (field (mut f32))))

 (type $bytes (array (mut i8)))
 (type $doubles (array (mut f64)))

 ;; CHECK:      (func $struct-gets (param $ref-i32 i32) (param $ref-i64 i32) (param $ref-f32 i32) (param $ref-f64 i32) (param $ref-ref i32) (param $ref-rtt i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load offset=4
 ;; CHECK-NEXT:    (local.get $ref-i32)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i64.load offset=4
 ;; CHECK-NEXT:    (local.get $ref-i64)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f32.load offset=4
 ;; CHECK-NEXT:    (local.get $ref-f32)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f64.load offset=4
 ;; CHECK-NEXT:    (local.get $ref-f64)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load offset=4
 ;; CHECK-NEXT:    (local.get $ref-ref)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load offset=4
 ;; CHECK-NEXT:    (local.get $ref-rtt)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $struct-gets
  (param $ref-i32 (ref $struct-i32))
  (param $ref-i64 (ref $struct-i64))
  (param $ref-f32 (ref $struct-f32))
  (param $ref-f64 (ref $struct-f64))
  (param $ref-ref (ref $struct-ref))
  (param $ref-rtt (ref $struct-rtt))
  (drop
   (struct.get $struct-i32 0 (local.get $ref-i32))
  )
  (drop
   (struct.get $struct-i64 0 (local.get $ref-i64))
  )
  (drop
   (struct.get $struct-f32 0 (local.get $ref-f32))
  )
  (drop
   (struct.get $struct-f64 0 (local.get $ref-f64))
  )
  (drop
   (struct.get $struct-ref 0 (local.get $ref-ref))
  )
  (drop
   (struct.get $struct-rtt 0 (local.get $ref-rtt))
  )
 )
 ;; CHECK:      (func $struct-sets (param $ref-i32 i32) (param $ref-i64 i32) (param $ref-f32 i32) (param $ref-f64 i32) (param $ref-ref i32) (param $ref-rtt i32)
 ;; CHECK-NEXT:  (i32.store offset=4
 ;; CHECK-NEXT:   (local.get $ref-i32)
 ;; CHECK-NEXT:   (i32.const 0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i64.store offset=4
 ;; CHECK-NEXT:   (local.get $ref-i64)
 ;; CHECK-NEXT:   (i64.const 0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (f32.store offset=4
 ;; CHECK-NEXT:   (local.get $ref-f32)
 ;; CHECK-NEXT:   (f32.const 0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (f64.store offset=4
 ;; CHECK-NEXT:   (local.get $ref-f64)
 ;; CHECK-NEXT:   (f64.const 0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store offset=4
 ;; CHECK-NEXT:   (local.get $ref-ref)
 ;; CHECK-NEXT:   (i32.const 0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store offset=4
 ;; CHECK-NEXT:   (local.get $ref-rtt)
 ;; CHECK-NEXT:   (i32.const 0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $struct-sets
  (param $ref-i32 (ref $struct-i32))
  (param $ref-i64 (ref $struct-i64))
  (param $ref-f32 (ref $struct-f32))
  (param $ref-f64 (ref $struct-f64))
  (param $ref-ref (ref $struct-ref))
  (param $ref-rtt (ref $struct-rtt))
  (struct.set $struct-i32 0 (local.get $ref-i32) (i32.const 0))
  (struct.set $struct-i64 0 (local.get $ref-i64) (i64.const 0))
  (struct.set $struct-f32 0 (local.get $ref-f32) (f32.const 0))
  (struct.set $struct-f64 0 (local.get $ref-f64) (f64.const 0))
  (struct.set $struct-ref 0 (local.get $ref-ref) (ref.null $empty))
  (struct.set $struct-rtt 0 (local.get $ref-rtt) (rtt.canon $empty))
 )
 ;; CHECK:      (func $many-fields (param $ref i32)
 ;; CHECK-NEXT:  (i32.store offset=4
 ;; CHECK-NEXT:   (local.get $ref)
 ;; CHECK-NEXT:   (i32.const 1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (f64.store offset=8
 ;; CHECK-NEXT:   (local.get $ref)
 ;; CHECK-NEXT:   (f64.const 3.14159)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (f32.store offset=16
 ;; CHECK-NEXT:   (local.get $ref)
 ;; CHECK-NEXT:   (f32.const 2.718280076980591)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $many-fields
  (param $ref (ref $many-fields))
  (struct.set $many-fields 0 (local.get $ref) (i32.const 1))
  (struct.set $many-fields 1 (local.get $ref) (f64.const 3.14159))
  (struct.set $many-fields 2 (local.get $ref) (f32.const 2.71828))
 )
 ;; CHECK:      (func $new
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $0
 ;; CHECK-NEXT:     (call $malloc
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:     (i32.const 0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store offset=4
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:     (i32.const 42)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $new
  (drop
   (struct.new_with_rtt $struct-i32
    (i32.const 42)
    (rtt.canon $struct-i32)
   )
  )
 )
 ;; CHECK:      (func $new-default
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $0
 ;; CHECK-NEXT:     (call $malloc
 ;; CHECK-NEXT:      (i32.const 20)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:     (i32.const 0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store offset=4
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:     (i32.const 0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (f64.store offset=8
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:     (f64.const 0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (f32.store offset=16
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:     (f32.const 0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $new-default
  (drop
   (struct.new_default_with_rtt $many-fields
    (rtt.canon $many-fields)
   )
  )
 )
 ;; CHECK:      (func $array-gets (param $ref-bytes i32) (param $ref-doubles i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.add
 ;; CHECK-NEXT:     (i32.add
 ;; CHECK-NEXT:      (local.get $ref-bytes)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.mul
 ;; CHECK-NEXT:      (i32.const 4)
 ;; CHECK-NEXT:      (i32.const 7)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f64.load
 ;; CHECK-NEXT:    (i32.add
 ;; CHECK-NEXT:     (i32.add
 ;; CHECK-NEXT:      (local.get $ref-doubles)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.mul
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:      (i32.const 7)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $array-gets
  (param $ref-bytes (ref $bytes))
  (param $ref-doubles (ref $doubles))
  (drop
   (array.get $bytes (local.get $ref-bytes) (i32.const 7))
  )
  (drop
   (array.get $doubles (local.get $ref-doubles) (i32.const 7))
  )
 )
 ;; CHECK:      (func $array-sets (param $ref-bytes i32) (param $ref-doubles i32)
 ;; CHECK-NEXT:  (i32.store
 ;; CHECK-NEXT:   (i32.add
 ;; CHECK-NEXT:    (i32.add
 ;; CHECK-NEXT:     (local.get $ref-bytes)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.mul
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:     (i32.const 7)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.const 42)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (f64.store
 ;; CHECK-NEXT:   (i32.add
 ;; CHECK-NEXT:    (i32.add
 ;; CHECK-NEXT:     (local.get $ref-doubles)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.mul
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:     (i32.const 7)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (f64.const 3.14159)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $array-sets
  (param $ref-bytes (ref $bytes))
  (param $ref-doubles (ref $doubles))
  (array.set $bytes (local.get $ref-bytes) (i32.const 7) (i32.const 42))
  (array.set $doubles (local.get $ref-doubles) (i32.const 7) (f64.const 3.14159))
 )
)
